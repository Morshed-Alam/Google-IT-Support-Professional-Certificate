1
00:00:10,380 --> 00:00:15,650
One of the most important tasks that our kernel performs is Process Management.

2
00:00:15,650 --> 00:00:18,085
A process is a program that's executing,

3
00:00:18,085 --> 00:00:20,610
like our internet browser or text editor.

4
00:00:20,610 --> 00:00:24,835
A program is an application that we can run, like Chrome.

5
00:00:24,835 --> 00:00:26,365
Take note of the difference.

6
00:00:26,365 --> 00:00:31,065
We can have many processes of the same program running at the same time.

7
00:00:31,065 --> 00:00:33,143
Think of how many Chrome windows you can open.

8
00:00:33,143 --> 00:00:36,480
These are all different processes for the same program.

9
00:00:36,480 --> 00:00:38,020
When we want to run our programs,

10
00:00:38,020 --> 00:00:40,495
we have to dedicate computer resources to them,

11
00:00:40,495 --> 00:00:42,640
like RAM and CPU.

12
00:00:42,640 --> 00:00:44,860
We only have a finite amount of resources and

13
00:00:44,860 --> 00:00:47,305
we want to be able to run multiple programs.

14
00:00:47,305 --> 00:00:49,915
A kernel has to manage our resources efficiently,

15
00:00:49,915 --> 00:00:52,725
so that all the programs we want to use can be run.

16
00:00:52,725 --> 00:00:57,130
Our kernel doesn't just dedicate all of our computers' resources to one process.

17
00:00:57,130 --> 00:00:59,440
Our system is actually constantly running

18
00:00:59,440 --> 00:01:02,835
multiple processes that are necessary for it to function,

19
00:01:02,835 --> 00:01:06,945
so our kernel has to worry about all of these processes at once.

20
00:01:06,945 --> 00:01:08,655
What a program wants to run,

21
00:01:08,655 --> 00:01:10,940
a process needs to be created for it.

22
00:01:10,940 --> 00:01:14,730
This process needs to have harder resources like RAM and CPU.

23
00:01:14,730 --> 00:01:19,770
The kernel has to schedule time for the CPU to execute the instructions in the process.

24
00:01:19,770 --> 00:01:23,280
But there's only one CPU and many processes.

25
00:01:23,280 --> 00:01:27,185
How does the CPU able to execute multiple processes at once?

26
00:01:27,185 --> 00:01:29,475
It actually does it, it executes

27
00:01:29,475 --> 00:01:33,870
processes one by one through something known as a time slice.

28
00:01:33,870 --> 00:01:36,990
A time slice is a very short interval of time that

29
00:01:36,990 --> 00:01:40,460
gets allocated to a process for CPU execution.

30
00:01:40,460 --> 00:01:43,310
It's so short that you don't even notice it.

31
00:01:43,310 --> 00:01:45,555
I mean, it's super short.

32
00:01:45,555 --> 00:01:51,750
The CPU execute one process in milliseconds then executes another process then another.

33
00:01:51,750 --> 00:01:55,955
To the human eye everything looks like it runs simultaneously,

34
00:01:55,955 --> 00:01:58,330
that's how fast the CPU works.

35
00:01:58,330 --> 00:02:02,955
If your computer is running slowly and your CPU resources are being maxed out,

36
00:02:02,955 --> 00:02:05,855
there could be many factors at play.

37
00:02:05,855 --> 00:02:10,720
It's possible that one process is taking up more time slices than it should.

38
00:02:10,720 --> 00:02:13,650
This means that the next process can't be executed.

39
00:02:13,650 --> 00:02:17,000
Another possibility is that there are too many processes that

40
00:02:17,000 --> 00:02:20,725
want CPU time and the CPU can't keep up with them.

41
00:02:20,725 --> 00:02:22,190
Whatever the case may be,

42
00:02:22,190 --> 00:02:25,565
even though the kernel does its best to manage processes for us,

43
00:02:25,565 --> 00:02:28,717
we might need to step in manually from time to time.

44
00:02:28,717 --> 00:02:32,275
We'll talk about how to manage processes in a later course.

45
00:02:32,275 --> 00:02:33,995
The kernel creates processes,

46
00:02:33,995 --> 00:02:38,090
efficiently schedules them, and manages how processes are terminated.

47
00:02:38,090 --> 00:02:40,355
This is important since we need a way to collect

48
00:02:40,355 --> 00:02:42,740
all the previously used resources that

49
00:02:42,740 --> 00:02:47,930
active processes were taking up and reallocate them to another process.